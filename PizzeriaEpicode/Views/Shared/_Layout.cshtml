<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title - Omar Badr</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>

    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-danger">
        <div class="container">
            @Html.ActionLink("PizzeriaEpicode", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Toggle navigation" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Products
                        </a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("All Products", "Index", "Products", new { area = "" }, new { @class = "dropdown-item" })</li>
                            @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                            {

                                <li>@Html.ActionLink("Add New Product", "Add", "Products", new { area = "" }, new { @class = "dropdown-item" })</li>
                            }
                        </ul>
                    </li>

                    <li>@Html.ActionLink("Cart", "Cart", "Products", new { area = "" }, new { @class = "nav-link" })</li>
                    <li>@Html.ActionLink("My Orders", "MyOrders", "Orders", new { area = "" }, new { @class = "nav-link" })</li>

                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                    {

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                Administration
                            </a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Unfulfilled Orders", "Index", "Admin", new { area = "" }, new { @class = "dropdown-item" })</li>
                                <li>@Html.ActionLink("Fulfilled Orders Total", "GetFulfilledOrdersCount", "Admin", new { area = "" }, new { @class = "dropdown-item" })</li>
                                <li>@Html.ActionLink("Daily Revenue", "GetDailyRevenue", "Admin", new { area = "" }, new { @class = "dropdown-item" })</li>
                            </ul>
                        </li>
                    }


                    @if (!User.Identity.IsAuthenticated)
                    {

                        <li>@Html.ActionLink("Login", "Login", "Auth", new { area = "" }, new { @class = "nav-link" })</li>
                        <li>@Html.ActionLink("Register", "Register", "Auth", new { area = "" }, new { @class = "nav-link" })</li>
                    }
                    else
                    {

                        <li>
                            <form action="@Url.Action("Logout", "Auth")" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-link nav-link">Logout</button>
                            </form>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Omar Badr</p>
        </footer>
    </div>
    <script src="~/Scripts/popper.min.js"></script>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")

    <script>

        document.addEventListener("DOMContentLoaded", function () {
            var dropdownToggleList = [].slice.call(document.querySelectorAll('[data-bs-toggle="dropdown"]'));
            dropdownToggleList.forEach(function (dropdownToggleEl) {
                new bootstrap.Dropdown(dropdownToggleEl);
            });
        });
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
